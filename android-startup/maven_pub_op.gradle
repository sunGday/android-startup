// publish
apply plugin: 'maven-publish'

/*

1. module里面，apply这个
apply from: "../maven_pub.gradle"

2. 定义一些maven环境
ext {
    mvn_groupId = "com.dn.vi.arch"
    mvn_artifactId = "common"
    mvn_version = "1.0.0" // "1.0.0-SNAPSHOT"
}


*/

ext {

    mvnValidateKeys = [
            'mvn_groupId',
            'mvn_artifactId',
            'mvn_version'
    ]

    /**
     * 本地的aar文件列表
     * 格式
     * [
     *   [groupId: "xxx.xxx.xx", artifactId: "yyy", version: "z.z.z", path: "libs/third.aar"]
     * ]
     */
    aarList = []

}

boolean validateMvnEnv(project) {
    if (project == null) {
        return false
    }
    for (mvnKey in mvnValidateKeys) {
        if (!project.hasProperty(mvnKey) && project.property(mvnKey) != "") {
            project.
            return false
        }
    }
    return true
}



task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (android.sourceSets != null) {
        from android.sourceSets.main.java.srcDirs
    } else {
        from sourceSets.main.java.srcDirs
    }
}


afterEvaluate {

    if (!validateMvnEnv(project)) {
        println("not a maven project: ${project.name}")
        return
    }

    def mvn_groupId = project.mvn_groupId
    def mvn_artifactId = project.mvn_artifactId
    def mvn_version = project.mvn_version

    if (project.snapshot) {
        mvn_version = mvn_version + "-SNAPSHOT"
    }

    println("This is maven module:")
    println("poms (group: ${mvn_groupId}, artifact: ${mvn_artifactId}, ver: ${mvn_version})")
    if (!aarList.isEmpty()) {
        println("with sub aar list: ${aarList}")
    }

    publishing {
        repositories {
            maven {
                allowInsecureProtocol = true
                def releasesRepoUrl = 'http://dnsdk.vimedia.cn:8081/repository/Viapp-release'
                def snapshotsRepoUrl = 'http://dnsdk.vimedia.cn:8081/repository/Viapp-snapshot'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

                credentials {
                    username = 'vapp-deployment'
                    password = 'pwd123456'
                }
            }
        }

        publications {

            if (android.sourceSets != null) {
                release(MavenPublication) {
                    from components.release

                    // artifact androidJavadocsJar
//                    artifact androidSourcesJar

                    groupId = mvn_groupId
                    artifactId = mvn_artifactId
                    version = mvn_version

                }
            }

            if (!aarList.isEmpty()) {
                // create aar list publisher
                aarList.each { aarLib ->
                    def libName = "lib_${aarLib.artifactId}"
                    if (!aarLib.path.isEmpty()) {
                        "${libName}"(MavenPublication) {

                            groupId = aarLib.groupId
                            artifactId = aarLib.artifactId
                            version = aarLib.version

                            artifact(aarLib.path)

                        }
                    }
                }
            }
        }

    }


}
